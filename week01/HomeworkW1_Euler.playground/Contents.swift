import UIKit

//MARK: Problem 1: Multiples of 3 or 5
//If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000.

var sum = 0
for i in 1..<1000{
    if i % 3 == 0 || i % 5 == 0{
        sum += i
    }
}
print(sum)

//MARK: Problem 2: Even Fibonacci numbers
/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

var a = 0
var b = 1
var fib = 0
var sumOfEven = 0

func fibonacci(n: Int){
    for _ in 0..<n{
        fib = a + b
        a = b
        b = fib
        print("fib: \(fib)")
        if fib % 2 == 0 {
            print("even: \(fib)")
            sumOfEven += fib
        print("sum of even: \(sumOfEven)")
        }
    }
}

fibonacci(n: 15)


//MARK: Problem 3: Largest prime factor
//The prime factors of 13195 are 5, 7, 13 and 29. What is the largest prime factor of the number 600851475143 ?

var number = 600851475143

var prime = 2
var largest = 0

while number != 1 {
    if number % prime == 0{
        largest = prime
        number /= prime
    } else {
        prime += 1
    }
}
print(largest)

